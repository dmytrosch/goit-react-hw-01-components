{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","js/randomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js"],"names":["module","exports","Profile","props","name","tag","location","avatar","stats","views","followers","likes","className","styles","container","avatarImg","src","alt","width","statsItem","statItemKey","statItemValue","defaultProps","randomColor","randomNum","Math","floor","random","Statisctics","title","statsList","map","el","style","backgroundColor","key","id","label","percentage","FriendList","friends","friend","isOnline","isOffline","TransactionHistory","transactions","table","headerItem","transaction","tableRow","tableCell","type","amount","currency","mainRootRef","document","querySelector","AppContainerStyles","display","flexDirection","justifyContent","alignItems","margin","App","user","Statistics","statisticalData","ReactDOM","render"],"mappings":"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","file":"static/js/main.73c1d607.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1k9ih\",\"avatarImg\":\"Profile_avatarImg__2K50Y\",\"name\":\"Profile_name__1Ve-a\",\"anotherText\":\"Profile_anotherText__27YsR\",\"tag\":\"Profile_tag__1TOyX Profile_anotherText__27YsR\",\"location\":\"Profile_location__1Hvua Profile_anotherText__27YsR\",\"stats\":\"Profile_stats__3RG1g\",\"statsItem\":\"Profile_statsItem__2UZ2Y\",\"statItemKey\":\"Profile_statItemKey__3ZdBd Profile_anotherText__27YsR\",\"statItemValue\":\"Profile_statItemValue__2EhDk Profile_name__1Ve-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TransactionHistory_container__19XNE\",\"table\":\"TransactionHistory_table__13qr4\",\"tableElement\":\"TransactionHistory_tableElement__1g7gN\",\"headerItem\":\"TransactionHistory_headerItem__3sRja TransactionHistory_tableElement__1g7gN\",\"tableCell\":\"TransactionHistory_tableCell__1szLZ TransactionHistory_tableElement__1g7gN\",\"tableRow\":\"TransactionHistory_tableRow__3FEPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendList_container__2Hpus\",\"friend\":\"FriendList_friend__1nbO-\",\"status\":\"FriendList_status__2eaRv\",\"isOnline\":\"FriendList_isOnline__3li8X FriendList_status__2eaRv\",\"isOffline\":\"FriendList_isOffline__3MyzE FriendList_status__2eaRv\",\"avatar\":\"FriendList_avatar__1GnM1\",\"name\":\"FriendList_name__1WWxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__2hRGK\",\"title\":\"Statistics_title__32wF3\",\"statsList\":\"Statistics_statsList__1Ar2A\",\"statsItem\":\"Statistics_statsItem__kg1FP\",\"label\":\"Statistics_label__29cN6\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nfunction Profile(props) {\r\n    const { name, tag, location, avatar, stats } = props;\r\n    const { views, followers, likes } = stats;\r\n    return (\r\n        <section className={styles.container}>\r\n            <img\r\n                className={styles.avatarImg}\r\n                src={avatar}\r\n                alt=\"user-avatar\"\r\n                width=\"250\"\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>@{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n            <ul className={styles.stats}>\r\n                <li className={styles.statsItem}>\r\n                    <p className={styles.statItemKey}>Followers:</p>\r\n                    <p className={styles.statItemValue}>{followers}</p>\r\n                </li>\r\n                <li className={styles.statsItem}>\r\n                    <p className={styles.statItemKey}>Views:</p>\r\n                    <p className={styles.statItemValue}>{views}</p>\r\n                </li>\r\n                <li className={styles.statsItem}>\r\n                    <p className={styles.statItemKey}>Likes:</p>\r\n                    <p className={styles.statItemValue}>{likes}</p>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nProfile.defaultProps = {\r\n    avatar: \"https://www.flaticon.com/svg/static/icons/svg/747/747376.svg\",\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    location: PropTypes.string.isRequired,\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n};\r\n\r\nexport default Profile;\r\n","export default function randomColor() {\r\n    function randomNum() {\r\n        return Math.floor(Math.random() * 256);\r\n    }\r\n    return `rgb(${randomNum()}, ${randomNum()}, ${randomNum()})`;\r\n\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport randomColor from \"../../js/randomColor\";\r\n\r\nfunction Statisctics(props) {\r\n    const { title, stats } = props;\r\n    return (\r\n        <section className={styles.container}>\r\n            {title && <h2 className={styles.title}>{title}</h2>}\r\n            <ul className={styles.statsList}>\r\n                {stats.map((el) => {\r\n                    return (\r\n                        <li\r\n                            style={{ backgroundColor: randomColor() }}\r\n                            className={styles.statsItem}\r\n                            key={el.id}\r\n                        >\r\n                            <p className={styles.label}>{el.label}</p>\r\n                            <p>{el.percentage}%</p>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nStatisctics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n};\r\n\r\nexport default Statisctics;\r\n","import React from \"react\";\r\nimport styles from \"./FriendList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FriendList({ friends }) {\r\n    return (\r\n        <section className={styles.container}>\r\n            <ul>\r\n                {friends.map((friend) => {\r\n                    return (\r\n                        <li className={styles.friend} key={friend.id}>\r\n                            <span\r\n                                className={\r\n                                    friend.isOnline\r\n                                        ? styles.isOnline\r\n                                        : styles.isOffline\r\n                                }\r\n                            ></span>\r\n                            <img\r\n                                src={friend.avatar}\r\n                                alt=\"users's avatar\"\r\n                                width={50}\r\n                                className={styles.avatar}\r\n                            />\r\n                            <span className={styles.name}>{friend.name}</span>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nFriendList.defaultProps = {\r\n    avatar: \"https://www.flaticon.com/svg/static/icons/svg/747/747376.svg\",\r\n    isOnline: false,\r\n};\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            avatar: PropTypes.string,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool,\r\n            id: PropTypes.number.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nfunction TransactionHistory({ transactions }) {\r\n    return (\r\n        <section className={styles.container}>\r\n            <table className={styles.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className={styles.headerItem}>Type</th>\r\n                        <th className={styles.headerItem}>Amount</th>\r\n                        <th className={styles.headerItem}>Currency</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactions.map((transaction) => {\r\n                        return (\r\n                            <tr\r\n                                className={styles.tableRow}\r\n                                key={transaction.id}\r\n                            >\r\n                                <td className={styles.tableCell}>\r\n                                    {transaction.type}\r\n                                </td>\r\n                                <td className={styles.tableCell}>\r\n                                    {transaction.amount}\r\n                                </td>\r\n                                <td className={styles.tableCell}>\r\n                                    {transaction.currency}\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    transactions: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport user from \"../data/user.json\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport statisticalData from \"../data/statistical-data.json\";\r\nimport FriendList from \"./FriendList/FriendList\";\r\nimport friends from \"../data/friends.json\";\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory'\r\nimport transactions from '../data/transactions.json'\r\n\r\nconst mainRootRef = document.querySelector(\"#root\");\r\nconst AppContainerStyles = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#959cdb\",\r\n    margin: \"0 auto\",\r\n};\r\n\r\nfunction App() {\r\n    return (\r\n        <section style={AppContainerStyles}>\r\n            <Profile\r\n                name={user.name}\r\n                tag={user.tag}\r\n                location={user.location}\r\n                avatar={user.avatar}\r\n                stats={user.stats}\r\n            />\r\n            <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n            <FriendList friends={friends} />\r\n            <TransactionHistory transactions={transactions}/>\r\n        </section>\r\n    );\r\n}\r\n\r\nReactDOM.render(<App />, mainRootRef);\r\n"],"sourceRoot":""}